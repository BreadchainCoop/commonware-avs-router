services:
  ethereum:
    platform: linux/amd64
    image: ghcr.io/breadchaincoop/ethereum:dev
    env_file:
      - .env
    ports:
      - "8545:8545"
  
  eigenlayer:
    platform: linux/amd64
    image: ghcr.io/breadchaincoop/eigenlayer:dev
    depends_on:
      ethereum:
        condition: service_started
    env_file:
      - .env
    volumes:
      - ./config/.nodes:/root/.nodes
      - ./config/config.example.json:/bls-middleware/contracts/docker/eigenlayer/config.json
  
  signer:
    image: ghcr.io/layr-labs/cerberus:0.0.2
    platform: linux/amd64
    depends_on:
      eigenlayer:
        condition: service_completed_successfully
    ports:
      - "${CERBERUS_METRICS_PORT:-9081}:${CERBERUS_METRICS_PORT:-9081}"
      - "${CERBERUS_GRPC_PORT:-50051}:${CERBERUS_GRPC_PORT:-50051}"
    environment:
      - "METRICS_PORT=${CERBERUS_METRICS_PORT:-9081}"
    env_file:
      - .env
    restart: unless-stopped
  
  node-1:
    image: ghcr.io/breadchaincoop/commonware-avs-node:dev
    pull_policy: always
    platform: linux/amd64
    depends_on:
      eigenlayer:
        condition: service_completed_successfully
      ethereum:
        condition: service_started
    env_file:
      - .env
    environment:
      - HTTP_RPC=http://ethereum:8545
      - WS_RPC=ws://ethereum:8545
      - AVS_DEPLOYMENT_PATH=/app/.nodes/avs_deploy.json
      - RUST_BACKTRACE=1
    volumes:
      - ./config/.nodes/operator_keys/testacc1.private.bls.key.json:/app/key.json:ro
      - ./config/.nodes:/app/.nodes:ro
      - ./config/public_orchestrator.json:/app/public_orchestrator.json:ro
    command: ["--key-file", "/app/key.json", "--port", "3001", "--orchestrator", "/app/public_orchestrator.json"]
    ports:
      - "4001:3001"
    restart: unless-stopped
  
  node-2:
    image: ghcr.io/breadchaincoop/commonware-avs-node:dev
    pull_policy: always
    platform: linux/amd64
    depends_on:
      eigenlayer:
        condition: service_completed_successfully
      ethereum:
        condition: service_started
    env_file:
      - .env
    environment:
      - HTTP_RPC=http://ethereum:8545
      - WS_RPC=ws://ethereum:8545
      - AVS_DEPLOYMENT_PATH=/app/.nodes/avs_deploy.json
      - RUST_BACKTRACE=1
    volumes:
      - ./config/.nodes/operator_keys/testacc2.private.bls.key.json:/app/key.json:ro
      - ./config/.nodes:/app/.nodes:ro
      - ./config/public_orchestrator.json:/app/public_orchestrator.json:ro
    command: ["--key-file", "/app/key.json", "--port", "3002", "--orchestrator", "/app/public_orchestrator.json"]
    ports:
      - "4002:3002"
    restart: unless-stopped
  
  node-3:
    image: ghcr.io/breadchaincoop/commonware-avs-node:dev
    pull_policy: always
    platform: linux/amd64
    depends_on:
      eigenlayer:
        condition: service_completed_successfully
      ethereum:
        condition: service_started
    env_file:
      - .env
    environment:
      - HTTP_RPC=http://ethereum:8545
      - WS_RPC=ws://ethereum:8545
      - AVS_DEPLOYMENT_PATH=/app/.nodes/avs_deploy.json
      - RUST_BACKTRACE=1
    volumes:
      - ./config/.nodes/operator_keys/testacc3.private.bls.key.json:/app/key.json:ro
      - ./config/.nodes:/app/.nodes:ro
      - ./config/public_orchestrator.json:/app/public_orchestrator.json:ro
    command: ["--key-file", "/app/key.json", "--port", "3003", "--orchestrator", "/app/public_orchestrator.json"]
    ports:
      - "4003:3003"
    restart: unless-stopped
  
  router:
    image: commonware-avs-router:debug-v2
    platform: linux/amd64
    depends_on:
      eigenlayer:
        condition: service_completed_successfully
      ethereum:
        condition: service_started
      node-1:
        condition: service_started
      node-2:
        condition: service_started
      node-3:
        condition: service_started
    env_file:
      - .env
    environment:
      - HTTP_RPC=http://ethereum:8545
      - WS_RPC=ws://ethereum:8545
      - AVS_DEPLOYMENT_PATH=/app/.nodes/avs_deploy.json
      - RUST_BACKTRACE=1
    volumes:
      - ./config/.nodes:/app/.nodes:ro
      - ./config/router_orchestrator.json:/app/router_orchestrator.json:ro
    command: ["--key-file", "/app/router_orchestrator.json", "--port", "3000"]
    ports:
      - "4000:3000"
      - "8080:8080"
    restart: unless-stopped