# Default values for commonware-avs-router.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Number of replicas to deploy
replicaCount: 1

# Image configuration
image:
  repository: ghcr.io/breadchaincoop/commonware-avs-router
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion
  tag: "latest"

# Image pull secrets for private registry
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Service account configuration
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Deployment annotations
podAnnotations: {}

# Pod security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

# Container security context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

# Service configuration
service:
  type: ClusterIP
  port: 8080
  targetPort: 8080
  annotations: {}

# Ingress configuration
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# Resource limits and requests
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

# Autoscaling configuration
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Node selector for pod assignment
nodeSelector: {}

# Tolerations for pod assignment
tolerations: []

# Affinity rules for pod assignment
affinity: {}

# Environment variables
env:
  # Add your environment variables here
  # Example:
  # - name: LOG_LEVEL
  #   value: "info"
  # - name: API_KEY
  #   valueFrom:
  #     secretKeyRef:
  #       name: api-secrets
  #       key: api-key

# ConfigMap data
configMap:
  # Add configuration files or data here
  # Example:
  # config.yaml: |
  #   server:
  #     port: 8080
  #     host: 0.0.0.0

# Secret data (base64 encoded in actual deployment)
secrets:
  # Add sensitive data here
  # Example:
  # api-key: "your-api-key"
  # db-password: "your-password"

# Health check probes
livenessProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

readinessProbe:
  httpGet:
    path: /ready
    port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3
  successThreshold: 1

# Volume mounts
volumeMounts: []
  # - name: config
  #   mountPath: /etc/config
  #   readOnly: true

# Volumes
volumes: []
  # - name: config
  #   configMap:
  #     name: commonware-avs-router-config

# Additional labels
labels: {}

# Pod disruption budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  # maxUnavailable: 1

# Network policy
networkPolicy:
  enabled: false
  policyTypes:
    - Ingress
    - Egress
  ingress: []
  egress: []